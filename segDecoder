library ieee;
use ieee.std_logic_1164.all;

entity SegDecoder is
    Port (
        D : in  std_logic_vector (3 downto 0);  -- 4-bit input for digits 0-F
		  enable : in std_logic;
        Y : out std_logic_vector (6 downto 0)   -- 7-segment display output
    );
end SegDecoder;

architecture SegFunc of SegDecoder is

begin

	process(enable, D)
	begin
		if enable = '1' then
			 case D is
				  when "0000" => Y <= "0111111"; -- 0
              when "0001" => Y <= "1111001"; -- 1
              when "0010" => Y <= "0100100"; -- 2
              when "0011" => Y <= "0000110"; -- 3
              when "0100" => Y <= "1001100"; -- 4
              when "0101" => Y <= "0100100"; -- 5
              when "0110" => Y <= "0100000"; -- 6
              when "0111" => Y <= "0001111"; -- 7
              when "1000" => Y <= "0000000"; -- 8
              when "1001" => Y <= "0000100"; -- 9
              when "1010" => Y <= "0001000"; -- A
              when "1011" => Y <= "1100000"; -- b
              when "1100" => Y <= "0110001"; -- C
              when "1101" => Y <= "1000010"; -- d
              when "1110" => Y <= "0110000"; -- E
              when "1111" => Y <= "0111000"; -- F
              when others => Y <= "1111111"; -- Default case (all segments off)
			end case;
		end if;
	end process;
end SegFunc;
